# This logstash parser is made specifically for Bro 2.2 logs in Security Onion 
# sent over syslog-ng, and is up-to-date as of securityonion-12.04.3-20130904, 
# http://blog.securityonion.net/2013/12/bro-22-and-elsa-15-packages-now.html
#
# Add the following config to your security onion master. This will forward bro
# logs to the rucksack over udp port 514.
#### start syslog-ng config ###################################################
#
# destination d_rucksack_udp { udp("<ip_address_of rucksack>"); };
# log { <add_bro_sources_here> destination(d_rucksack_udp); };
#
#### end syslog-ng config #####################################################
#
# Parser by Jose Ortiz
###############################################################################

filter {
  if [message] =~ /^#/ {
    drop {  }
  } else {

#bro-conn #################################
  if [type] == "bro-conn" {
    mutate {
      gsub => [ "message", "bro_conn:", "bro-conn" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:uid}\|%{DATA:orig_h}\|%{DATA:orig_p}\|%{DATA:resp_h}\|%{DATA:resp_p}\|%{DATA:proto}\|%{DATA:service}\|%{DATA:duration}\|%{DATA:orig_bytes}\|%{DATA:resp_bytes}\|%{DATA:conn_state}\|%{DATA:local_orig}\|%{DATA:missed_bytes}\|%{DATA:history}\|%{DATA:orig_pkts}\|%{DATA:orig_ip_bytes}\|%{DATA:resp_pkts}\|%{DATA:resp_ip_bytes}\|%{DATA:tunnel_parents}\|%{DATA:orig_cc}\|%{DATA:resp_cc}\|%{GREEDYDATA:sensorname}" ] }
  }
#bro-communication ########################
  if [type] == "bro-communication" {
    mutate {
      gsub => [ "message", "bro_communication:", "bro-communication" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:peer}\|%{DATA:src_name}\|%{DATA:connected_peer_desc}\|%{DATA:connected_peer_addr}\|%{DATA:connected_peer_port}\|%{DATA:level}\|%{GREEDYDATA:msg}" ] }
  }
#bro-dhcp #################################
  if [type] == "bro-dhcp" {
    mutate {
      gsub => [ "message", "bro_dhcp:", "bro-dhcp" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:uid}\|%{DATA:orig_h}\|%{DATA:d.orig_p}\|%{DATA:resp_h}\|%{DATA:resp_p}\|%{DATA:mac}\|%{DATA:assigned_ip>}\|%{DATA:lease_time}\|%{GREEDYDATA:trans_id}" ] }
  }
#bro-dns ##################################
  if [type] == "bro-dns" {
    mutate {
      gsub => [ "message", "bro_dns:", "bro-dns" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message","%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:uid}\|%{DATA:orig_h}\|%{DATA:orig_p}\|%{DATA:resp_h}\|%{DATA:resp_p}\|%{DATA:proto}\|%{DATA:trans_id}\|%{DATA:query}\|%{DATA:q_class}\|%{DATA:q_class_name}\|%{DATA:qtype}\|%{DATA:qtype_name}\|%{DATA:rcode}\|%{DATA:rcode_name}\|%{DATA:AA}\|%{DATA:TC}\|%{DATA:RD}\|%{DATA:RA}\|%{DATA:Z}\|%{DATA:answers}\|%{DATA:TTLs}\|%{GREEDYDATA:rejected}" ] }
  }
#bro-dpd ##################################
  if [type] == "bro-dpd" {
    mutate {
      gsub => [ "message", "bro_dpd:", "bro-dpd" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:uid}\|%{DATA:orig_h}\|%{DATA:orig_p}\|%{DATA:resp_h}\|%{DATA:resp_p}\|%{DATA:proto}\|%{DATA:analyzer}\|%{GREEDYDATA:failure_reason}" ] }
  }
#bro-files ################################
  if [type] == "bro-files" {
    mutate {
      gsub => [ "message", "bro_files:", "bro-files" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:fuid}\|%{DATA:tx_hosts}\|%{DATA:rx_hosts}\|%{DATA:conn_uids}\|%{DATA:source}\|%{DATA:depth}\|%{DATA:analyzers}\|%{DATA:mime_type}\|%{DATA:filename}\|%{DATA:duration}\|%{DATA:local_orig}\|%{DATA:is_orig}\|%{DATA:seen_bytes}\|%{DATA:total_bytes}\|%{DATA:missing_bytes}\|%{DATA:overflow_bytes}\|%{DATA:timedout}\|%{DATA:parent_fuid}\|%{DATA:md5}\|%{DATA:sha1}\|%{DATA:sha256}\|%{GREEDYDATA:extracted}" ] }
  }
#bro-http #################################
  if [type] == "bro-http" {
    mutate {
      gsub => [ "message", "bro_http:", "bro-http" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:uid}\|%{DATA:orig_h}\|%{NUMBER:orig_p}\|%{DATA:resp_h}\|%{NUMBER:resp_p}\|%{DATA:trans_depth}\|%{DATA:method}\|%{DATA:host}\|%{DATA:uri}\|%{DATA:referrer}\|%{DATA:<user_agent}\|%{DATA:request_body_len}\|%{DATA:response_body_len}\|%{DATA:status_code}\|%{DATA:status_msg}\|%{DATA:info_code}\|%{DATA:info_msg}\|%{DATA:filename}\|%{DATA:tags} %{DATA:username}\|%{DATA:password}\|%{DATA:proxied}\|%{DATA:orig_fuids}\|%{DATA:orig_mime_types}\|%{DATA:resp_fuids}\|%{GREEDYDATA:resp_mime_types}" ] }
  }
#bro-known_certs ##########################
  if [type] == "bro-known_certs" {
    mutate {
      gsub => [ "message", "bro_known_certs:", "bro-known_certs" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:host}\|%{DATA:port_num}\|%{DATA:subject}\|%{DATA:issuer_subject}\|%{GREEDYDATA:serial}" ] }
  }
#bro-known_hosts ##########################
  if [type] == "bro-known_hosts" {
    mutate {
      gsub => [ "message", "bro_known_hosts:", "bro-known_hosts" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{GREEDYDATA:host}" ] }
  }
#bro-notice ###############################
  if [type] == "bro-notice" {
    mutate {
      gsub => [ "message", "bro_notice:", "bro-notice" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:uid}\|%{DATA:orig_h}\|%{NUMBER:orig_p}\|%{DATA:resp_h}\|%{NUMBER:resp_p}\|%{DATA:fuid}\|%{DATA:file_mime_type}\|%{DATA:file_desc}\|%{DATA:proto}\|%{DATA:note}\|%{DATA:msg}\|%{DATA:sub}\|%{DATA:src}\|%{DATA:dst}\|%{DATA:p}\|%{DATA:n}\|%{DATA:peer_descr}\|%{DATA:<actions}\|%{DATA:suppress_for}\|%{DATA:dropped}\|%{DATA:remote_location.country_code}\|%{DATA:remote_location.region}\|%{DATA:remote_location.city}\|%{DATA:remote_location.latitude}\|%{GREEDYDATA:remote_location.longitude}" ] }
  }
#bro-known_services #######################
  if [type] == "bro-services" {
    mutate {
      gsub => [ "message", "bro_services:", "bro-services" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:host}\|%{DATA:port_num}\|%{DATA:port_proto}\|%{GREEDYDATA:service}" ] }
  }
#bro-software #############################
  if [type] == "bro-software" {
    mutate {
      gsub => [ "message", "bro_software:", "bro-software" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:host}\|%{DATA:host_p}\|%{DATA:software_type}\|%{DATA:name}\|%{DATA:version_major}\|%{DATA:version_minor}\|%{DATA:version_minor2}\|%{DATA:version_minor3}\|%{DATA:version_addl}\|%{GREEDYDATA:unparsed_version}" ] }
  }
#bro-ssh ##################################
  if [type] == "bro-ssh" {
    mutate {
      gsub => [ "message", "bro_ssh:", "bro-ssh" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:uid}\|%{DATA:orig_h}\|%{DATA:orig_p}\|%{DATA:resp_h}\|%{DATA:resp_p}\|%{DATA:status}\|%{DATA:direction}\|%{DATA:client}\|%{DATA:server}\|%{DATA:remote_location.country_code}\|%{DATA:remote_location_region}\|%{DATA:remote_location_city}\|%{DATA:remote_location_latitude}\|%{GREEDYDATA:remote_location_longitude}" ] }
  }
#bro-ssl ##################################
  if [type] == "bro-ssl" {
    mutate {
      gsub => [ "message", "bro_ssl:", "bro-ssl" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:uid}\|%{DATA:orig_h}\|%{DATA:orig_p}\|%{DATA:resp_h}\|%{DATA:resp_p}\|%{DATA:version}\|%{DATA:cipher}\|%{DATA:server_name}\|%{DATA:session_id}\|%{DATA:subject}\|%{DATA:issuer_subject}\|%{DATA:not_valid_before}\|%{DATA:not_valid_after}\|%{DATA:last_alert}\|%{DATA:client_subject}\|%{DATA:client_issuer_subject}\|%{DATA:cert_hash}\|%{GREEDYDATA:validation_status}" ] }
  }
#bro-weird ################################
  if [type] == "bro-weird" {
    mutate {
      gsub => [ "message", "bro_weird:", "bro-weird" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
      grok { match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{DATA:ts}\|%{DATA:uid}\|%{DATA:orig_h}\|%{DATA:orig_p}\|%{DATA:resp_h}\|%{DATA:resp_p}\|%{DATA:name}\|%{DATA:addl}\|%{DATA:notice}\|%{GREEDYDATA:peer}" ] }
    }
  }
}

