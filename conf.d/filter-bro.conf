# This logstash parser is made specifically for Bro 2.2 logs in Security Onion 
# sent over syslog-ng, and is up-to-date as of securityonion-12.04.3-20130904, 
# http://blog.securityonion.net/2013/12/bro-22-and-elsa-15-packages-now.html
#
# Add the following config to your security onion master. This will forward bro
# logs to the rucksack over udp port 514.
#### start syslog-ng config ###################################################
#
# destination d_rucksack_udp { udp("<ip_address_of rucksack>"); };
# log { <add_bro_sources_here> destination(d_rucksack_udp); };
#
#### end syslog-ng config #####################################################
#
# Parser by Jose Ortiz
###############################################################################

filter {
  if [message] =~ /^#/ {
    drop {  }
  } else {

#bro-conn #################################
  if [type] == "bro-conn" {
    mutate {
      gsub => [ "message", "bro_conn:", "bro-conn" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BROCONN}" ] 
	}
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-communication ########################
  if [type] == "bro-communication" {
    mutate {
      gsub => [ "message", "bro_communication:", "bro-communication" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ]  
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BROCOMMUNICATION}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-dhcp #################################
  if [type] == "bro-dhcp" {
    mutate {
      gsub => [ "message", "bro_dhcp:", "bro-dhcp" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ]  
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BRODHCP}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-dns ##################################
  if [type] == "bro-dns" {
    mutate {
      gsub => [ "message", "bro_dns:", "bro-dns" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ]  
      match => [ "message","%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BRODNS}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-dpd ##################################
  if [type] == "bro-dpd" {
    mutate {
      gsub => [ "message", "bro_dpd:", "bro-dpd" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BRODPD}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-files ################################
  if [type] == "bro-files" {
    mutate {
      gsub => [ "message", "bro_files:", "bro-files" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BROFILES}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-http #################################
  if [type] == "bro-http" {
    mutate {
      gsub => [ "message", "bro_http:", "bro-http" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BROHTTP}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-known_certs ##########################
  if [type] == "bro-known_certs" {
    mutate {
      gsub => [ "message", "bro_known_certs:", "bro-known_certs" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BROKNOWNCERTS}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-known_hosts ##########################
  if [type] == "bro-known_hosts" {
    mutate {
      gsub => [ "message", "bro_known_hosts:", "bro-known_hosts" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BROKNOWNHOSTS}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-notice ###############################
  if [type] == "bro-notice" {
    mutate {
      gsub => [ "message", "bro_notice:", "bro-notice" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BRONOTICE}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-known_services #######################
  if [type] == "bro-services" {
    mutate {
      gsub => [ "message", "bro_services:", "bro-services" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BROKNOWNSERVICES}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-software #############################
  if [type] == "bro-software" {
    mutate {
      gsub => [ "message", "bro_software:", "bro-software" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BROSOFTWARE}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-ssh ##################################
  if [type] == "bro-ssh" {
    mutate {
      gsub => [ "message", "bro_ssh:", "bro-ssh" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BROSSH}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-ssl ##################################
  if [type] == "bro-ssl" {
    mutate {
      gsub => [ "message", "bro_ssl:", "bro-ssl" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BROSSL}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
#bro-weird ################################
  if [type] == "bro-weird" {
    mutate {
      gsub => [ "message", "bro_weird:", "bro-weird" ]
      add_tag => [ "bro", "grokked" ]
      remove_field => [ "bro_type" ]
    }
    grok {
	  patterns_dir => [ "/etc/logstash/patterns" ] 
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:bro_type} %{BROWEIRD}" ] 
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
}
}

